version: 2.1
orbs:
  node: circleci/node@1.1.6

commands:
  restore_caches:
    description: 'Restore node_modules/, src/ and other files'
    steps:
      - restore_cache:
          keys:
            - '{{ .Branch }}-{{ .Revision }}'
      - restore_cache:
          keys:
            - '{{ .Branch }}-{{ checksum "package-lock.json" }}'

jobs:
  configure-jfrog-cli:
    executor:
      name: node/default
    steps:
      - run: |
          curl -fL https://getcli.jfrog.io | sh
          ./jfrog rt c import $JFROG_RT_MIKEJONES_EXPORT
          tail -6 ./.jfrog/jfrog-cli.conf
          ./jfrog rt c show mikejones
          ./jfrog rt npmc --server-id-deploy mikejones --server-id-resolve mikejones --repo-deploy npm --repo-resolve npm
      - save_cache:
          key: jfrog-{{ .Branch }}-{{ .Revision }}
          paths:
            - jfrog
            - ".jfrog/jfrog-cli.conf"
            - ".jfrog/projects/npm.yaml"
  install-dependencies:
    executor:
      name: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - '{{ .Branch }}-{{ checksum "package-lock.json" }}'
      - restore_cache:
          keys:
            - jfrog-{{ .Branch }}-{{ .Revision }}
      - run: ./jfrog rt c show mikejones
      - run: ./jfrog rt npmi
      - save_cache:
          key: '{{ .Branch }}-{{ checksum "package-lock.json" }}'
          paths: 
            - node_modules
      - save_cache:
          key: '{{ .Branch }}-{{ .Revision }}'
          paths:
            - src
            - package-lock.json
            - package.json
            - audit-ci.json
            - jest.config.js
            - tsconfig.json
            - .eslintrc.js
  compile:
    executor:
      name: node/default
    steps:
      - restore_caches
      - run: npm run build-ts
      - save_cache:
          key: 'dist-{{ .Branch }}-{{ .Revision }}'
          paths:
            - dist
          
  test-unit:
    executor:
      name: node/default
    steps:
      - restore_caches
      - run: npm run test

  lint:
    executor:
      name: node/default
    steps:
      - restore_caches
      - run: npm run lint-strict

  audit-dependencies:
    executor:
      name: node/default
    steps:
      - restore_caches
      - run: npm run audit-dependencies
  
  publish-dryrun:
    executor:
      name: node/default
    steps:
      - restore_caches
      - restore_cache:
          keys:
            - 'dist-{{ .Branch }}-{{ .Revision }}'
      - restore_cache:
          keys:
            - jfrog-{{ .Branch }}-{{ .Revision }}
      - run: |
          npm pack
          ./jfrog rt npmp --dry-run
  publish:
    executor:
      name: node/default
    steps:
      - restore_caches
      - restore_cache:
          keys:
            - 'dist-{{ .Branch }}-{{ .Revision }}'
      - restore_cache:
          keys:
            - jfrog-{{ .Branch }}-{{ .Revision }}
      - run: |
          npm pack
          ./jfrog rt npmp

workflows:
    standard-build:
      jobs:
        - configure-jfrog-cli
        - install-dependencies:
            requires: [configure-jfrog-cli]
        - compile:
            requires: [install-dependencies]
        - test-unit:
            requires: [install-dependencies]
        - lint:
            requires: [install-dependencies]
        - audit-dependencies:
            requires: [install-dependencies]
        - publish-dryrun:
            requires: [compile]
        - publish:
            requires:
              - compile
              - test-unit
              - lint
              - audit-dependencies
              - publish-dryrun
            filters:
              branches:
                only:
                  - mainline
